diff --git a/node_modules/node-pre-gyp/lib/package.js b/node_modules/node-pre-gyp/lib/package.js
index 4959265..744c1d2 100644
--- a/node_modules/node-pre-gyp/lib/package.js
+++ b/node_modules/node-pre-gyp/lib/package.js
@@ -9,7 +9,6 @@ var path = require('path');
 var log = require('npmlog');
 var versioning = require('./util/versioning.js');
 var napi = require('./util/napi.js');
-var write = require('fs').createWriteStream;
 var existsAsync = fs.exists || path.exists;
 var mkdirp = require('mkdirp');
 var tar = require('tar');
@@ -20,7 +19,9 @@ function _package(gyp, argv, callback) {
     var napi_build_version = napi.get_napi_build_version_from_command_args(argv);
     var opts = versioning.evaluate(package_json, gyp.opts, napi_build_version);
     var from = opts.module_path;
+    var pkg_path = package_json.binary.pkg_path || from;
     var binary_module = path.join(from,opts.module_name + '.node');
+
     existsAsync(binary_module,function(found) {
         if (!found) {
             return callback(new Error("Cannot package because " + binary_module + " missing: run `node-pre-gyp rebuild` first"));
@@ -34,17 +35,13 @@ function _package(gyp, argv, callback) {
         };
         mkdirp(path.dirname(tarball),function(err) {
             if (err) return callback(err);
-            packlist({ path: from }).then(function(files) {
-                var base = path.basename(from);
-                files = files.map(function(file) {
-                    return path.join(base, file);
-                });
+            packlist({ path: pkg_path }).then(function(files) {
                 tar.create({
                     portable: true,
                     gzip: true,
                     onentry: filter_func,
                     file: tarball,
-                    cwd: path.dirname(from)
+                    cwd: path.resolve(process.cwd(), pkg_path),
                 }, files, function(err) {
                     if (err)  console.error('['+package_json.name+'] ' + err.message);
                     else log.info('package','Binary staged at "' + tarball + '"');
